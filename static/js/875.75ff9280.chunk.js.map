{"version":3,"file":"static/js/875.75ff9280.chunk.js","mappings":"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","sources":["hooks/useFetchTrendingMovies.jsx","hooks/useFetchMovieDetails.jsx","hooks/useFetchMovieCast.jsx","hooks/useFetchMovieReview.jsx","hooks/useFetchMoviesByQuery.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    movie,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    cast,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReview = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReview(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    review,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandelSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return {\n    onHandelSubmit,\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import notFound from 'img/not_found.png.jpg';\nimport { Link } from 'react-router-dom';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    title,\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <div>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : notFound\n        }\n        alt={title || original_title}\n      />\n      <div>\n        <h1>{title || original_title}</h1>\n        <p>{release_date}</p>\n        <h2>User score: {vote_average}</h2>\n        <code>Overview: {overview}</code>\n        <p>Genres: {allGenres}</p>\n      </div>\n      <div>\n        <p>Additional info</p>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import Loader from 'components/Loader/Loader';\nimport { useFetchMovieDetails } from 'hooks';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useRef } from 'react';\n\nconst MovieDetails = () => {\n  const { movie, isLoading, error } = useFetchMovieDetails();\n  const location = useLocation();\n  const goBackLink = useRef(location?.state?.from ?? '/');\n\n  return (\n    <>\n      <Link to={goBackLink.current}>\n        <button>GoBack</button>\n      </Link>\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured...</p>}\n      {movie && <MovieInfo movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        {' '}\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '769572b7424cdd494dc478209682dba1';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrending","sent","t0","message","finish","stop","apply","arguments","useFetchMovieDetails","movie","setMovie","movieId","useParams","getMovieInfo","useFetchMovieCast","cast","setCast","getCast","useFetchMovieReview","review","setReview","getReviews","useFetchMoviesByQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMoviesByQuery","onHandelSubmit","value","q","title","original_title","genres","overview","poster_path","release_date","vote_average","allGenres","map","genre","name","join","_jsxs","children","_jsx","src","concat","notFound","alt","Link","to","_location$state$from","_location$state","_useFetchMovieDetails","location","useLocation","goBackLink","useRef","state","from","_Fragment","current","Loader","MovieInfo","Suspense","fallback","Outlet","axios","API_KEY","_yield$axios$get","abrupt","results","_ref2","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}
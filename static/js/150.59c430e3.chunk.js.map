{"version":3,"file":"static/js/150.59c430e3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MoviesList.module.css?7a3b","components/MovieList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","hooks/useFetchMoviesByQuery.jsx","services/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesListWrapper\":\"MoviesList_moviesListWrapper__7v-LM\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport notFound from 'img/not_found.png.jpg';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.moviesListWrapper}>\n      {movies.map(({ id, title, name, original_title, poster_path }) => (\n        <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n          <li className=\"moviesListItem\">\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : notFound\n              }\n              alt={title || name || original_title}\n            />\n            <p className=\"moviesListTitle\">{title || name || original_title}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","import { useState } from 'react';\n\nconst SearchForm = ({ onHandelSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query.trim()) return alert(`please, enter a word`);\n    onHandelSubmit(query);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" onChange={handleChange} value={query} />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useFetchMoviesByQuery } from 'hooks/useFetchMoviesByQuery';\n\nconst Movies = () => {\n  const { onHandelSubmit, movies, isLoading, error } = useFetchMoviesByQuery();\n  return (\n    <>\n      <SearchForm onHandelSubmit={onHandelSubmit} />\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured...</p>}\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandelSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return {\n    onHandelSubmit,\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '769572b7424cdd494dc478209682dba1';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","className","css","children","map","_ref2","id","title","name","original_title","poster_path","Link","to","concat","state","from","_jsxs","src","notFound","alt","onHandelSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","trim","alert","type","onChange","target","value","_useFetchMoviesByQuer","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMoviesByQuery","sent","t0","message","finish","stop","apply","arguments","q","useFetchMoviesByQuery","_Fragment","SearchForm","Loader","length","MoviesList","axios","API_KEY","getTrending","_yield$axios$get","abrupt","results","getMovieInfo","_callee2","movieId","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2"],"sourceRoot":""}
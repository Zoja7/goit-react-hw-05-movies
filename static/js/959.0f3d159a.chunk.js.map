{"version":3,"file":"static/js/959.0f3d159a.chunk.js","mappings":"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","sources":["hooks/useFetchTrendingMovies.jsx","hooks/useFetchMovieDetails.jsx","hooks/useFetchMovieCast.jsx","hooks/useFetchMovieReview.jsx","hooks/useFetchMoviesByQuery.jsx","webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    movie,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    cast,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReview = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReview(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    review,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandelSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return {\n    onHandelSubmit,\n    movies,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieInfoWrapper\":\"MovieInfo_movieInfoWrapper__vdLMm\",\"movieInfoImage\":\"MovieInfo_movieInfoImage__8x2ew\",\"movieInfoContentWrapper\":\"MovieInfo_movieInfoContentWrapper__4FT9S\",\"movieInfoAdditionalContentWrapper\":\"MovieInfo_movieInfoAdditionalContentWrapper__u8U9j\",\"movieCast\":\"MovieInfo_movieCast__byIX+\",\"movieReview\":\"MovieInfo_movieReview__P3ehz\"};","import notFound from 'img/not_found.png';\nimport { NavLink } from 'react-router-dom';\nimport css from './MovieInfo.module.css';\n\nconst MovieInfo = ({ movie }) => {\n  const {\n    title,\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <div className={css.movieInfoWrapper}>\n      <img\n        className={css.movieInfoImage}\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : notFound\n        }\n        alt={title || original_title}\n      />\n      <div className={css.movieInfoContentWrapper}>\n        <h1>{title || original_title}</h1>\n        <p>{release_date}</p>\n        <h2>User score: {vote_average}</h2>\n        <code>\n          <b>Overview:</b> {overview}\n        </code>\n        <p>\n          <b>Genres: </b>\n          {allGenres}\n        </p>\n      </div>\n      <div className={css.movieInfoAdditionalContentWrapper}>\n        <p>\n          <b>Additional info</b>\n        </p>\n        <NavLink className={css.movieCast} to=\"cast\">\n          Cast\n        </NavLink>\n        <NavLink className={css.movieReview} to=\"reviews\">\n          Reviews\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import Loader from 'components/Loader/Loader';\nimport { useFetchMovieDetails } from 'hooks';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useRef } from 'react';\n\nconst MovieDetails = () => {\n  const { movie, isLoading, error } = useFetchMovieDetails();\n  const location = useLocation();\n  const goBackLink = useRef(location?.state?.from ?? '/');\n\n  return (\n    <>\n      <Link className=\"goBackLink\" to={goBackLink.current}>\n        <button className=\"goBackButton\">← </button>\n      </Link>\n      {isLoading && <Loader />}\n      {error && <p>Oops, some error occured...</p>}\n      {movie && <MovieInfo movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        {' '}\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '769572b7424cdd494dc478209682dba1';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrending","sent","t0","message","finish","stop","apply","arguments","useFetchMovieDetails","movie","setMovie","movieId","useParams","getMovieInfo","useFetchMovieCast","cast","setCast","getCast","useFetchMovieReview","review","setReview","getReviews","useFetchMoviesByQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMoviesByQuery","onHandelSubmit","value","q","title","original_title","genres","overview","poster_path","release_date","vote_average","allGenres","map","genre","name","join","_jsxs","className","css","children","_jsx","src","concat","notFound","alt","NavLink","to","_location$state$from","_location$state","_useFetchMovieDetails","location","useLocation","goBackLink","useRef","state","from","_Fragment","Link","current","Loader","MovieInfo","Suspense","fallback","Outlet","axios","API_KEY","_yield$axios$get","abrupt","results","_ref2","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}
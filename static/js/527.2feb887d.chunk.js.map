{"version":3,"file":"static/js/527.2feb887d.chunk.js","mappings":"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","sources":["hooks/useFetchTrendingMovies.jsx","hooks/useFetchMovieDetails.jsx","hooks/useFetchMovieCast.jsx","hooks/useFetchMovieReview.jsx","hooks/useFetchMoviesByQuery.jsx","webpack://react-homework-template/./src/pages/Cast.module.css?8b09","pages/Cast.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    movie,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    cast,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReview = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReview(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    review,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandelSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return {\n    onHandelSubmit,\n    movies,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__aKQ5p\",\"castWrapper\":\"Cast_castWrapper__HhWOf\",\"castImage\":\"Cast_castImage__6ghKe\",\"castInfo\":\"Cast_castInfo__N5SCl\"};","import { useFetchMovieCast } from 'hooks';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { cast, isLoading, error } = useFetchMovieCast();\n\n  const defaultImg = `<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>`;\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n\n  if (!cast || cast.length === 0) {\n    return <p>No cast information available</p>;\n  }\n\n  const { name, original_name, profile_path, character, popularity } = cast[0];\n\n  return (\n    <div className={css.castContainer}>\n      <div className={css.castWrapper}>\n        {' '}\n        <img\n          className={css.castImage}\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : defaultImg\n          }\n          alt={name || original_name}\n          width={250}\n        />\n        <div className={css.castInfo}>\n          <h1> {name || original_name}</h1>\n          <h3>Character: {character}</h3>\n          <p>\n            <b>Popularity:</b> {popularity}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '769572b7424cdd494dc478209682dba1';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrending","sent","t0","message","finish","stop","apply","arguments","useFetchMovieDetails","movie","setMovie","movieId","useParams","getMovieInfo","useFetchMovieCast","cast","setCast","getCast","useFetchMovieReview","review","setReview","getReviews","useFetchMoviesByQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMoviesByQuery","onHandelSubmit","value","q","_useFetchMovieCast","_jsx","children","_jsxs","length","_cast$","name","original_name","profile_path","character","popularity","className","css","src","concat","alt","width","axios","API_KEY","_yield$axios$get","abrupt","results","_ref2","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}
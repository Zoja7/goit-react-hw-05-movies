{"version":3,"file":"static/js/757.659a5cf9.chunk.js","mappings":"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","sources":["hooks/useFetchTrendingMovies.jsx","hooks/useFetchMovieDetails.jsx","hooks/useFetchMovieCast.jsx","hooks/useFetchMovieReview.jsx","hooks/useFetchMoviesByQuery.jsx","webpack://react-homework-template/./src/pages/Review.module.css?94ba","pages/Reviews.jsx","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrending } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrending();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    movies,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    movie,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    cast,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReview = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getReviews(movieId);\n        setReview(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return {\n    review,\n    isLoading,\n    error,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n\n  const onHandelSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return {\n    onHandelSubmit,\n    movies,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewContainer\":\"Review_reviewContainer__5dgO0\",\"reviewWrapper\":\"Review_reviewWrapper__pyZ1O\",\"reviewInfo\":\"Review_reviewInfo__Xqle-\"};","import { useFetchMovieReview } from 'hooks';\nimport moment from 'moment';\nimport css from './Review.module.css';\n\nconst Review = () => {\n  const { review, isLoading, error } = useFetchMovieReview();\n\n  const defaultImg = `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`;\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n  if (error) {\n    return <p>Error:{error}</p>;\n  }\n  if (!review || review.length === 0) {\n    return <p>No review information available</p>;\n  }\n\n  const { author, author_details, content, created_at } = review[0];\n  const { avatar_path } = author_details;\n  const formattedDate = moment(created_at).format('MMMM D, YYYY h:mm A');\n  // const numericRating = typeof rating === 'number' ? Number(rating) : rating;\n  //   const numericRating = parseInt(rating, 10);\n\n  return (\n    <div className={css.reviewContainer}>\n      {' '}\n      <div className={css.reviewWrapper}>\n        <img\n          src={\n            avatar_path\n              ? `https://image.tmdb.org/t/p/w500${avatar_path}`\n              : defaultImg\n          }\n          alt={author}\n          width={250}\n        />\n        <div className={css.reviewInfo}>\n          <h2>{author}</h2>\n          <h3>Date: {formattedDate}</h3>\n          {/* <p>Rating: {numericRating}</p> */}\n          <code className={css.reviewText}>\n            <b>Review:</b> {content}\n          </code>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '769572b7424cdd494dc478209682dba1';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrending","sent","t0","message","finish","stop","apply","arguments","useFetchMovieDetails","movie","setMovie","movieId","useParams","getMovieInfo","useFetchMovieCast","cast","setCast","getCast","useFetchMovieReview","review","setReview","getReviews","useFetchMoviesByQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMoviesByQuery","onHandelSubmit","value","q","_useFetchMovieReview","_jsx","children","_jsxs","length","_review$","author","author_details","content","created_at","avatar_path","formattedDate","moment","format","className","css","src","concat","alt","width","axios","API_KEY","_yield$axios$get","abrupt","results","_ref2","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}